---
- name: Set a fact to ensure Ansible uses the python interpreter in the virtualenv
  set_fact:
    ansible_python_interpreter: "{{ os_projects_venv }}/bin/python"
  when: os_projects_venv != None

- name: Ensure the domain for project exists
  os_keystone_domain:
    auth_type: "{{ os_projects_auth_type }}"
    auth: "{{ os_projects_admin_auth }}"
    name: "{{ item.project_domain }}"
    description: ""
    state: present
    enabled: True
    wait: yes
  with_items: "{{ os_projects }}"
  environment: "{{ os_projects_environment }}"

- name: Ensure the project exists
  os_project:
    auth_type: "{{ os_projects_auth_type }}"
    auth: "{{ os_projects_admin_auth }}"
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    domain_id: "{{ item.project_domain }}"
    state: present
    enabled: True
    wait: yes
  with_items: "{{ os_projects }}"
  environment: "{{ os_projects_environment }}"

- include: users.yml
  with_items: "{{ os_projects }}"
  loop_control:
    loop_var: project

- name: Ensure SSH keypairs are registered
  os_keypair:
    auth_type: "{{ os_projects_auth_type }}"
    auth: "{{ os_projects_admin_auth | combine(os_projects_user_auth_overrides) }}"
    name: "{{ item.1.name }}"
    public_key_file: "{{ item.1.public_key_file | default(omit) }}"
    public_key: "{{ item.1.public_key | default(omit) }}"
    state: present
  with_subelements:
    - "{{ os_projects }}"
    - keypairs
  environment: "{{ os_projects_environment }}"
  vars:
    # Authentication option overrides for non-admin user as used by os_*
    # modules' 'auth' argument.
    os_projects_user_auth_overrides:
      project_domain_name: "{{ item.0.project_domain }}"
      user_domain_name: "{{ item.0.user_domain }}"
      project_name: "{{ item.0.name }}"
      username: "{{ item.0.users[0].name }}"
      password: "{{ item.0.users[0].password }}"

# This variable is unset before we set it, and it does not appear to be
# possible to unset a variable in Ansible.
- name: Set a fact to reset the Ansible python interpreter
  set_fact:
    ansible_python_interpreter: /usr/bin/python
  when: os_projects_venv != None

# The os_quota module is not available in Ansible 2.2. It will be added in
# Ansible 2.3, at which point we should use it here.
# NOTE: We're using --os-interface=public as this is the default for os_*
# modules and we currently provide no means to override it.
- name: Ensure quotas are set
  shell: >
    source {{ os_projects_venv }}/bin/activate &&
    openstack
    {% for auth_name, auth_value in os_projects_admin_auth.items() %}
    --os-{{ auth_name | replace('_', '-') }}='{{ auth_value }}'
    {% endfor %}
    --os-interface=public
    quota set {{ item.name }}
    {% for name, value in item.quotas.items() %} --{{ name | replace('_', '-') }}={{ value }}{% endfor %}
  when: item.quotas
  with_items: "{{ os_projects }}"
  environment: "{{ os_projects_environment }}"

- name: Ensure openrc environment file exists
  local_action:
    module: template
    src: openrc.j2
    dest: "{{ item.1.openrc_file }}"
    mode: 0600
  with_subelements:
    - "{{ os_projects }}"
    - users
  when: item.1.openrc_file is defined
